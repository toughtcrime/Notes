// <auto-generated />
using System;
using Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Infrastructure.Migrations
{
    [DbContext(typeof(MainDbContext))]
    partial class MainDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Domain.Models.Note", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<long>("OwnerId")
                        .HasColumnType("bigint");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("Content");

                    b.HasIndex("Id");

                    b.HasIndex("OwnerId");

                    b.HasIndex("Title");

                    b.ToTable("Notes");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Content = "Puncake recipe is...",
                            OwnerId = 2L,
                            Title = "Puncake recipe"
                        },
                        new
                        {
                            Id = 2L,
                            Content = "u know, I'm not telling anything...",
                            OwnerId = 2L,
                            Title = "How to find a job as junior .NET developer"
                        },
                        new
                        {
                            Id = 3L,
                            Content = "1. Use cv builder. 2. Write short info about you. 3. Write info about your skills and pet projects",
                            OwnerId = 1L,
                            Title = "How to make good CV"
                        },
                        new
                        {
                            Id = 4L,
                            Content = "Pizza recipe is..................",
                            OwnerId = 1L,
                            Title = "Pizza recipe from my mom"
                        });
                });

            modelBuilder.Entity("Domain.Models.User", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("HashedPassword")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("RegistrationDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("Role")
                        .HasColumnType("integer");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("Email");

                    b.HasIndex("Id");

                    b.HasIndex("Username");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Email = "text@mail.com",
                            HashedPassword = "$2a$11$YxtxFEyBexyoHcMZ4zEsgeAIAO53TcDDyYDoMrxRVXLnsdOMgt/HS",
                            RegistrationDate = new DateTime(2023, 10, 9, 6, 41, 38, 259, DateTimeKind.Utc).AddTicks(5417),
                            Role = 1,
                            Username = "JackBiba"
                        },
                        new
                        {
                            Id = 2L,
                            Email = "text@mail.com",
                            HashedPassword = "$2a$11$KPE6U7BhXGasiL2dP57vceFQO3t/kWj1wPpKveIG8.UNbVAu8o1Qa",
                            RegistrationDate = new DateTime(2023, 10, 9, 6, 41, 38, 512, DateTimeKind.Utc).AddTicks(1385),
                            Role = 1,
                            Username = "JackBoba"
                        });
                });

            modelBuilder.Entity("Domain.Models.Note", b =>
                {
                    b.HasOne("Domain.Models.User", "Owner")
                        .WithMany("Notes")
                        .HasForeignKey("OwnerId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Owner");
                });

            modelBuilder.Entity("Domain.Models.User", b =>
                {
                    b.Navigation("Notes");
                });
#pragma warning restore 612, 618
        }
    }
}
